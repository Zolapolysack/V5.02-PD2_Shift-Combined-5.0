name: Build and Deploy Static Site to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies (root)
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: List publish candidates
        run: |
          echo "Will publish these root static files:";
          ls -1 index.html manifest.json sw.js || true

      - name: Prepare artifact directory
        run: |
          mkdir public
          cp index.html public/
          cp images.png public/ 2>/dev/null || true
          cp manifest.json public/ 2>/dev/null || true
          cp sw.js public/ 2>/dev/null || true
          cp -r assets public/assets 2>/dev/null || true
          cp -r icon public/icon 2>/dev/null || true
          # Include shift module subpages (Thai + spaces in folder names) for iframe loading
          cp -r "ปรับ script PD2_Shift-A_V4.0" "public/ปรับ script PD2_Shift-A_V4.0" 2>/dev/null || true
          cp -r "ปรับ script PD2_Shift-B_V4.0" "public/ปรับ script PD2_Shift-B_V4.0" 2>/dev/null || true
          cp -r "ตัดม้วน PD2" "public/ตัดม้วน PD2" 2>/dev/null || true
          cp -r "link google sheet" "public/link google sheet" 2>/dev/null || true
          # (ไม่ copy โฟลเดอร์ server/ และ scripts/ เพื่อไม่ให้สับสนบน Pages)
          touch public/.nojekyll
          echo "Deployed at $(date -u)" > public/DEPLOY_INFO.txt

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./public
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_path: ./public
